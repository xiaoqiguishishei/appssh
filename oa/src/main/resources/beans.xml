<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         ">
   <!-- 开启自动扫描的包 -->
   <context:component-scan base-package="com.huike">
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>
   
   <!-- 加载db.properties -->
   <context:property-placeholder location="classpath:jdbc.properties"  />
   
   <!-- 配置数据源 -->
   <bean id = "ds" class = "com.mchange.v2.c3p0.ComboPooledDataSource">
   		<!-- <property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driver}"></property> -->
		
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
		<property name="jdbcUrl" value="jdbc:mysql:///oa"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		
   </bean>
   
   <!-- 创建sqlSessionfactoryBean对象 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property> 
		<!-- 
			 typeAliasesPackage: 指定哪个包下的实体对象采用别名
		 -->
		<property name="typeAliasesPackage" value="com.huike.bean"/>
	</bean>
	
	<!-- 
		3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer 
			sqlSessionFactory / basePackage
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.huike.dao"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean> 
   
   
   <!-- 声明事务由哪个类来处理 -->
   <bean id = "tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref  = "ds" />
   </bean>
    
   <!-- 2. 配置事务属性 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="tx">
		<tx:attributes>
			根据方法名指定事务的属性
			<tx:method name="purchase" propagation="REQUIRES_NEW"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	
	3. 配置事务切入点, 以及把事务切入点和事务属性关联起来
	<aop:config>
		<aop:pointcut expression="execution(public * com.service.UserServiceImpl.*(..))" 
			id="txPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>	
	</aop:config> -->
	
	<tx:annotation-driven transaction-manager="tx"/>
	
</beans>
